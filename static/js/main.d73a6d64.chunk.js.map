{"version":3,"sources":["store/actions/actions.js","components/Trivia.js","components/Modal.js","App.js","serviceWorker.js","store/reducers/rootReducer.js","index.js"],"names":["api","getPoke","min","max","randomPoke","Math","ceil","floor","random","dispatch","getState","url","axios","get","then","response","type","payload","data","catch","error","Trivia","state","answer","handleSubmit","event","preventDefault","props","submitAnswer","openModal","target","reset","handleChange","setState","value","this","score","entry","className","onSubmit","htmlFor","onChange","id","Component","connect","action","message","color","toLowerCase","console","log","currentState","res","poke","pokeName","pokeDesc","natural","pokeSpriteUrl","sprites","front_shiny","front_default","err","Modal","options","onCloseEnd","closeModal","inDuration","outDuration","opacity","dismissible","startingTop","endingTop","M","init","getInstance","open","ref","charAt","toUpperCase","slice","alt","src","modal","App","question","Boolean","window","location","hostname","match","initState","cleanEntry","flavorTextEntries","name","ame","substr","regex","RegExp","replace","rootReducer","flavor_text_entries","find","language","flavor_text","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d73a6d64.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = \"https://pokeapi.co/api/v2/\";\r\nconst pokeSpecies = \"pokemon-species/\";\r\nconst pokemon = \"pokemon/\";\r\n\r\nexport const submitAnswer = answer => {\r\n  return (dispatch, getState) => {\r\n    const currentState = getState();\r\n    var action = {\r\n      type: \"\",\r\n      payload: {\r\n        message: \"\",\r\n        color: \"\"\r\n      }\r\n    };\r\n    if (currentState.answer === answer.toLowerCase()) {\r\n      action.type = \"ANSWER_CORRECT\";\r\n      action.payload.message = \"Answer is correct!\";\r\n      action.payload.color = \"green\";\r\n    } else {\r\n      action.type = \"ANSWER_INCORRECT\";\r\n      action.payload.message = \"Answer is incorrect!\";\r\n      action.payload.color = \"red\";\r\n    }\r\n    console.log(\"Action is \", action);\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\r\n}\r\n\r\n/** Literally from 1 to 807 because PokeAPI hasn't added SwSh stuff **/\r\n\r\nexport const getPoke = () => {\r\n  const randomPoke = getRandomIntInclusive(1, 807);\r\n  return (dispatch, getState) => {\r\n    const url = api + pokeSpecies + randomPoke;\r\n    return axios\r\n      .get(url)\r\n      .then(response => {\r\n        dispatch({\r\n          type: \"GET_POKE\",\r\n          payload: response.data\r\n        });\r\n      })\r\n      .catch(error => {\r\n        dispatch({\r\n          type: \"GET_POKE_ERROR\",\r\n          error\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const openModal = () => {\r\n  return (dispatch, getState) => {\r\n    const currentState = getState();\r\n    const url = api + pokemon + currentState.answer;\r\n\r\n    return axios\r\n      .get(url)\r\n      .then(res => {\r\n        var poke = res.data;\r\n        var action = {\r\n          type: \"OPEN_MODAL\",\r\n          payload: {\r\n            pokeName: currentState.answer,\r\n            pokeDesc: currentState.natural,\r\n            pokeSpriteUrl:\r\n              Math.random() === 1.0 / 1365.33\r\n                ? poke.sprites.front_shiny\r\n                : poke.sprites.front_default\r\n          }\r\n        };\r\n        dispatch(action);\r\n      })\r\n      .catch(error => dispatch({ type: \"OPEN_MODAL_ERROR\", err: error }));\r\n  };\r\n};\r\n\r\nexport const closeModal = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: \"CLOSE_MODAL\"\r\n    });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { submitAnswer, openModal } from \"../store/actions/actions\";\r\n\r\nexport class Trivia extends Component {\r\n  state = {\r\n    answer: \"\"\r\n  };\r\n\r\n  render() {\r\n    const { score, entry } = this.props;\r\n    return (\r\n      <div className=\"card small yellow darken-3\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">\r\n            <div className=\"left\">PokeTrivia</div>\r\n            <div className=\"right-align\">Score: {score}</div>\r\n          </span>\r\n          <div className=\"center\">\r\n            {entry ? (\r\n              <p>{entry}</p>\r\n            ) : (\r\n              <div className=\"preloader-wrapper big active\">\r\n                <div className=\"spinner-layer spinner-red-only\">\r\n                  <div className=\"circle-clipper left\">\r\n                    <div className=\"circle\"></div>\r\n                  </div>\r\n                  <div className=\"gap-patch\">\r\n                    <div className=\"circle\"></div>\r\n                  </div>\r\n                  <div className=\"circle-clipper right\">\r\n                    <div className=\"circle\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"card-action\">\r\n          <form onSubmit={this.handleSubmit} className=\"center\">\r\n            <label htmlFor=\"answer\">Answer</label>\r\n            <input\r\n              onChange={this.handleChange}\r\n              value={this.state.value}\r\n              type=\"text\"\r\n              id=\"answer\"\r\n            ></input>\r\n            <button className=\"btn red z-depth-0\">Submit</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.submitAnswer(this.state.answer);\r\n    this.props.openModal();\r\n    event.target.reset();\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      answer: event.target.value\r\n    });\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    submitAnswer: answer => {\r\n      dispatch(submitAnswer(answer));\r\n    },\r\n    openModal: () => dispatch(openModal())\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Trivia);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { closeModal, getPoke } from \"../store/actions/actions\";\r\nimport M from \"materialize-css\";\r\n\r\nclass Modal extends Component {\r\n  options = {\r\n    onCloseEnd: () => {\r\n      this.props.closeModal();\r\n      this.props.getPoke();\r\n    },\r\n    inDuration: 250,\r\n    outDuration: 250,\r\n    opacity: 0.7,\r\n    dismissible: true,\r\n    startingTop: \"4%\",\r\n    endingTop: \"10%\"\r\n  };\r\n  componentDidMount() {\r\n    M.Modal.init(this.Modal, this.options);\r\n    let instance = M.Modal.getInstance(this.Modal);\r\n    instance.open();\r\n  }\r\n  render() {\r\n    console.log(\"Modal props\", this.props);\r\n    const { message, color, pokeName, pokeDesc, pokeSpriteUrl } = this.props;\r\n    return (\r\n      <div>\r\n        <div\r\n          ref={Modal => {\r\n            this.Modal = Modal;\r\n          }}\r\n          id=\"modal1\"\r\n          className=\"modal bottom-sheet\"\r\n        >\r\n          {/* If you want Bottom Sheet Modal then add \r\n                        bottom-sheet class to the \"modal\" div\r\n                        If you want Fixed Footer Modal then add\r\n                        modal-fixed-footer to the \"modal\" div*/}\r\n          <div className={\"modal-content center \" + color}>\r\n            <h4 className=\"center\">\r\n              {message && pokeName\r\n                ? message +\r\n                  \" \" +\r\n                  (pokeName.charAt(0).toUpperCase() + pokeName.slice(1))\r\n                : \"Loading..\"}\r\n            </h4>\r\n            <img\r\n              alt={pokeName && \"Image of \" + pokeName.toUpperCase()}\r\n              src={pokeSpriteUrl}\r\n            ></img>\r\n            <div>\r\n              {pokeDesc ? (\r\n                <p>{pokeDesc}</p>\r\n              ) : (\r\n                <div className=\"preloader-wrapper big active\">\r\n                  <div className=\"spinner-layer spinner-red-only\">\r\n                    <div className=\"circle-clipper left\">\r\n                      <div className=\"circle\"></div>\r\n                    </div>\r\n                    <div className=\"gap-patch\">\r\n                      <div className=\"circle\"></div>\r\n                    </div>\r\n                    <div className=\"circle-clipper right\">\r\n                      <div className=\"circle\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className={color && \"modal-footer \" + color}>\r\n            <button\r\n              className={\r\n                color && \"modal-close waves-effect btn-flat waves-\" + color\r\n              }\r\n            >\r\n              Got It!\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...state.modal\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    closeModal: () => dispatch(closeModal()),\r\n    getPoke: () => dispatch(getPoke())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\r\n","import Trivia from \"./components/Trivia\";\r\nimport Modal from \"./components/Modal\";\r\nimport { getPoke } from \"./store/actions/actions\";\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class App extends Component {\r\n  componentDidMount() {\r\n    this.props.getPoke();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App container\">\r\n        <Trivia\r\n          question={this.props.question}\r\n          score={this.props.score}\r\n          entry={this.props.entry}\r\n        />\r\n        {this.props.modal.message && <Modal />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getPoke: () => dispatch(getPoke())\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    question: state.question,\r\n    score: state.score,\r\n    entry: state.entry,\r\n    modal: { ...state.modal }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","var initState = {\r\n  entry: \"\",\r\n  answer: \"\",\r\n  score: 0,\r\n  question: 0,\r\n  modal: {}\r\n};\r\nconst cleanEntry = (flavorTextEntries, name) => {\r\n  const ame = name.substr(1);\r\n  const regex = new RegExp(ame, \"g\");\r\n  const replacedFTE = flavorTextEntries.replace(regex, \"____ \");\r\n  return replacedFTE;\r\n};\r\nconst rootReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"ANSWER_CORRECT\":\r\n      const score = state.score + 1;\r\n      return {\r\n        ...state,\r\n        modal: {\r\n          message: action.payload.message,\r\n          color: action.payload.color\r\n        },\r\n        score\r\n      };\r\n    case \"ANSWER_INCORRECT\":\r\n      return {\r\n        ...state,\r\n        modal: {\r\n          message: action.payload.message,\r\n          color: action.payload.color\r\n        }\r\n      };\r\n    case \"GET_POKE\":\r\n      var question = state.question + 1;\r\n      const { name } = action.payload;\r\n      const entry = cleanEntry(\r\n        action.payload.flavor_text_entries.find(entry => {\r\n          return entry.language.name === \"en\";\r\n        }).flavor_text,\r\n        name\r\n      );\r\n      return {\r\n        ...state,\r\n        answer: name,\r\n        natural: action.payload.flavor_text_entries.find(entry => {\r\n          return entry.language.name === \"en\";\r\n        }).flavor_text,\r\n        entry,\r\n        question\r\n      };\r\n    case \"CLOSE_MODAL\":\r\n      return {\r\n        ...state,\r\n        modal: null\r\n      };\r\n    case \"OPEN_MODAL\":\r\n      return {\r\n        ...state,\r\n        entry: \"\",\r\n        modal: {\r\n          message: state.modal.message,\r\n          color: state.modal.color,\r\n          pokeName: action.payload.pokeName,\r\n          pokeDesc: action.payload.pokeDesc,\r\n          pokeSpriteUrl: action.payload.pokeSpriteUrl\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\n\nimport thunk from \"redux-thunk\";\n\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport \"materialize-css/dist/js/materialize\";\n\nimport rootReducer from \"./store/reducers/rootReducer\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}